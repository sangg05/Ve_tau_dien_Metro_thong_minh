# Generated by Django 5.1.6 on 2025-09-11 14:04

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ScanRecord',
            fields=[
                ('scan_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('card_uid', models.CharField(max_length=50)),
                ('station_id', models.CharField(max_length=20)),
                ('device_type', models.CharField(blank=True, choices=[('CheckIn', 'CheckIn'), ('CheckOut', 'CheckOut')], max_length=20, null=True)),
                ('ticket_found', models.BooleanField(default=False)),
                ('error_reason', models.CharField(blank=True, max_length=50, null=True)),
                ('device_id', models.CharField(default='UNKNOWN', max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('station_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('station_name', models.CharField(max_length=100)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TicketProduct',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('type', models.CharField(max_length=50)),
                ('days', models.IntegerField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('user_password', models.CharField(max_length=255)),
                ('is_student', models.BooleanField(default=False)),
                ('card_uid', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StationAssignment',
            fields=[
                ('device_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('device_type', models.CharField(choices=[('CheckIn', 'CheckIn'), ('CheckOut', 'CheckOut')], max_length=20)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.station')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticket_type', models.CharField(choices=[('Month', 'Month'), ('Day_All', 'Day_All'), ('Day_Point_To_Point', 'Day_Point_To_Point')], max_length=30)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('valid_from', models.DateTimeField(auto_now_add=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('ticket_status', models.CharField(choices=[('Active', 'Active'), ('Expired', 'Expired'), ('Blocked', 'Blocked')], max_length=10)),
                ('card_uid', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('end_station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='end_station', to='api.station')),
                ('start_station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='start_station', to='api.station')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.transactions')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.users')),
            ],
        ),
        migrations.CreateModel(
            name='FraudLog',
            fields=[
                ('fraud_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('detected_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ticket')),
            ],
        ),
        migrations.AddField(
            model_name='transactions',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.users'),
        ),
        migrations.CreateModel(
            name='CheckInOut',
            fields=[
                ('check_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('check_time', models.DateTimeField(auto_now_add=True)),
                ('direction', models.CharField(choices=[('In', 'In'), ('Out', 'Out')], max_length=5)),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.station')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.users')),
            ],
        ),
    ]
